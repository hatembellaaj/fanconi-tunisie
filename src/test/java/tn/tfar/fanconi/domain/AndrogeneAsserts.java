package tn.tfar.fanconi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AndrogeneAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAndrogeneAllPropertiesEquals(Androgene expected, Androgene actual) {
        assertAndrogeneAutoGeneratedPropertiesEquals(expected, actual);
        assertAndrogeneAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAndrogeneAllUpdatablePropertiesEquals(Androgene expected, Androgene actual) {
        assertAndrogeneUpdatableFieldsEquals(expected, actual);
        assertAndrogeneUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAndrogeneAutoGeneratedPropertiesEquals(Androgene expected, Androgene actual) {
        assertThat(expected)
            .as("Verify Androgene auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAndrogeneUpdatableFieldsEquals(Androgene expected, Androgene actual) {
        assertThat(expected)
            .as("Verify Androgene relevant properties")
            .satisfies(e -> assertThat(e.getnDossierPa()).as("check nDossierPa").isEqualTo(actual.getnDossierPa()))
            .satisfies(e -> assertThat(e.getMois()).as("check mois").isEqualTo(actual.getMois()))
            .satisfies(e -> assertThat(e.getReponse()).as("check reponse").isEqualTo(actual.getReponse()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAndrogeneUpdatableRelationshipsEquals(Androgene expected, Androgene actual) {
        // empty method
    }
}
