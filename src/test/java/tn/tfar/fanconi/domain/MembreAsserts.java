package tn.tfar.fanconi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MembreAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMembreAllPropertiesEquals(Membre expected, Membre actual) {
        assertMembreAutoGeneratedPropertiesEquals(expected, actual);
        assertMembreAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMembreAllUpdatablePropertiesEquals(Membre expected, Membre actual) {
        assertMembreUpdatableFieldsEquals(expected, actual);
        assertMembreUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMembreAutoGeneratedPropertiesEquals(Membre expected, Membre actual) {
        assertThat(expected)
            .as("Verify Membre auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMembreUpdatableFieldsEquals(Membre expected, Membre actual) {
        assertThat(expected)
            .as("Verify Membre relevant properties")
            .satisfies(e -> assertThat(e.getnDossierM()).as("check nDossierM").isEqualTo(actual.getnDossierM()))
            .satisfies(e -> assertThat(e.getIdMembre()).as("check idMembre").isEqualTo(actual.getIdMembre()))
            .satisfies(e -> assertThat(e.getPrenomM()).as("check prenomM").isEqualTo(actual.getPrenomM()))
            .satisfies(e -> assertThat(e.getLienParente()).as("check lienParente").isEqualTo(actual.getLienParente()))
            .satisfies(e -> assertThat(e.getTypeCancerM()).as("check typeCancerM").isEqualTo(actual.getTypeCancerM()))
            .satisfies(e -> assertThat(e.getAgeDecouverteM()).as("check ageDecouverteM").isEqualTo(actual.getAgeDecouverteM()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMembreUpdatableRelationshipsEquals(Membre expected, Membre actual) {
        // empty method
    }
}
